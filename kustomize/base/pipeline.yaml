apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: workflow-deployment
spec:
  description: |
    This pipeline clones a git repo, builds a Docker image with Kaniko and
    pushes it to a registry
  params:
    - name: gitUrl
      description: The SSH URL of the repository to clone
      type: string
    - name: workflowId
      description: The workflow ID from the repository
      type: string
    - name: convertToFlat
      description: Whether conversion to flat layout is needed or it's already flattened
      type: string
      default: "true"
  workspaces:
    - name: workflow-source
    - name: kustomize-template
    - name: workflow-kustomize
    - name: ssh-creds
    - name: docker-credentials
  tasks:
    - name: fetch-workflow
      taskRef:
        name: git-cli
      workspaces:
        - name: source
          workspace: workflow-source
        - name: ssh-directory
          workspace: ssh-creds
      params:
        - name: GIT_USER_NAME
          value: Parodos Tekton Pipeline
        - name: GIT_USER_EMAIL
          value: parodos@redhat.com
        - name: USER_HOME
          value: /home/git
        - name: GIT_SCRIPT
          value: |
            eval "$(ssh-agent -s)"
            ssh-add "${PARAM_USER_HOME}"/.ssh/id_rsa
            git clone $(params.gitUrl) workflow
            cd workflow
    - name: fetch-kustomize-template
      taskRef:
        name: git-cli
      workspaces:
        - name: source
          workspace: kustomize-template
        - name: ssh-directory
          workspace: ssh-creds
      params:
        - name: GIT_USER_NAME
          value: Parodos Tekton Pipeline
        - name: GIT_USER_EMAIL
          value: parodos@redhat.com
        - name: USER_HOME
          value: /home/git
        - name: GIT_SCRIPT
          value: |
            eval "$(ssh-agent -s)"
            ssh-add "${PARAM_USER_HOME}"/.ssh/id_rsa
            git clone git@github.com:parodos-dev/workflow-kustomize-template.git .
    - name: flatten-workflow
      runAfter: ["fetch-workflow"]
      taskRef:
        name: flattener
      workspaces:
        - name: workflow-source
          workspace: workflow-source
      params:
        - name: workflowId
          value: $(params.workflowId)
        - name: convertToFlat
          value: $(params.convertToFlat)
    - name: build-manifests
      runAfter: ["flatten-workflow"]
      taskRef:
        name: build-manifests
      workspaces:
        - name: workflow-source
          workspace: workflow-source
      params:
        - name: workflowId
          value: $(params.workflowId)
    - name: build-kustomize
      runAfter: ["build-manifests", "fetch-kustomize-template"]
      taskRef:
        name: build-kustomize
      workspaces:
        - name: workflow-source
          workspace: workflow-source
        - name: kustomize-template
          workspace: kustomize-template
        - name: workflow-kustomize
          workspace: workflow-kustomize
      params:
        - name: workflowId
          value: $(params.workflowId)
        - name: imageTag
          value: $(tasks.fetch-workflow.results.commit)
    - name: build-and-push-image
      runAfter: ["flatten-workflow"]
      taskRef:
        name: kaniko
      workspaces:
        - name: source
          workspace: workflow-source
        - name: dockerconfig
          workspace: docker-credentials
      params:
        - name: IMAGE
          value: quay.io/orchestrator/serverless-workflow-$(params.workflowId):$(tasks.fetch-workflow.results.commit)
        - name: DOCKERFILE
          value: flat/workflow-builder.Dockerfile
        - name: CONTEXT
          value: flat/$(params.workflowId)
    - name: push-workflow-kustomize
      runAfter: ["build-kustomize", "build-and-push-image"]
      taskRef:
        name: git-cli
      workspaces:
        - name: source
          workspace: workflow-kustomize
        - name: ssh-directory
          workspace: ssh-creds
      params:
        - name: GIT_USER_NAME
          value: Parodos Tekton Pipeline
        - name: GIT_USER_EMAIL
          value: parodos@redhat.com
        - name: USER_HOME
          value: /home/git
        - name: GIT_SCRIPT
          value: |
            eval "$(ssh-agent -s)"
            ssh-add "${PARAM_USER_HOME}"/.ssh/id_rsa

            git config --global --add safe.directory /workspace/source/workflow
            git clone $(params.gitUrl) workflow
            cd workflow

            COMMIT=$(git rev-parse --short=8 HEAD)
            TIMESTAMP=$(date +"%Y-%m-%d_%H-%M")
            BRANCH="deployment-$TIMESTAMP"
            git checkout -b "$BRANCH"
            git branch --set-upstream-to=origin/main "$BRANCH"
            git status
            git config --global --list
            git push -u origin "$BRANCH"

            rm -rf kustomize
            cp -R ../kustomize .
            git add kustomize
            git commit -m "Deployment for $COMMIT"
            git push origin "$BRANCH"
---
